x-app-build: &app-build
  build:
    context: .
    dockerfile: Dockerfile

x-app-env: &app-env
  env_file:
    - .env
  environment:
    - DJANGO_SETTINGS_MODULE=events_app.settings
    - PYTHONUNBUFFERED=1
    - PYTHONPATH=/app

services:
  web:
    <<: [*app-build, *app-env]
    container_name: events_app_web
    command: >
      sh -c "python manage.py migrate &&
             python manage.py createsuperuser --noinput --username admin --email admin@example.com &&
             python manage.py runserver 0.0.0.0:8000"
    ports:
      - '8000:8000'
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    volumes:
      - .:/app
    environment:
      - DJANGO_SUPERUSER_PASSWORD=admin123

  celery:
    <<: [*app-build, *app-env]
    container_name: events_app_celery
    command: sh -c "sleep 10 && python -m celery -A events_app worker --loglevel=info"
    depends_on:
      redis:
        condition: service_started
      db:
        condition: service_healthy
    volumes:
      - .:/app
    user: '1000:1000'

  redis:
    image: redis:alpine
    container_name: events_app_redis
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data

  db:
    <<: *app-env
    image: postgres:13-alpine
    container_name: events_app_db
    ports:
      - '5432:5432'
    volumes:
      - db_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=events_db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  redis_data:
  db_data:
